{
    "context": {
        "language": "{language}",
        "logging_framework": "{logging_framework}",
        "testing_framework": "{testing_framework}",
        "source_code": "{source_code}",
        "source_code_implements": "{source_code_implements}",
        "source_code_extends": "{source_code_extends}",
        "source_code_fields": "{source_code_fields}",
        "reference_package_info": "{reference_package_info}",
        "reference_methods": "{reference_methods}",
        "code_imports": "{code_imports}",
        "class_comments": "{class_comments}",
        "method_comments": "{method_comments}",
        "static_code_analysis": "{static_code_analysis}",
        "package": "{package}",
        "notes": "{notes}"
    },
    "question": "Based on the given context and code, please generate line unit tests using the following criteria:\n- Tests should cover reasonable input, output, edge cases, and exceptions.\n- Do not assume there are public getters and setters unless found in the source code\n- Do not test getters and setters\n- When calling a method, make sure you use the correct parameter types\n- Use the reference code to help create objects, but only test the source code\n- Do not make unreachable code\n- Do not use methods that are not in the reference methods, or java source code, unless they are explicitly mentioned in the prompt and are necessary to test the functionality of the class.\n- Interfaces - When using an interface, prefer an implementation given, otherwise use an anonymous class\n- Formatting: \n- Tests should have clear, descriptive method names\n- Test comments should be included when complexity warrants it.\n- Use mocks when needed.\n- Include package name\n- Use assertions\n- Include imports to the class being tested\n- Include imports to testing framework libraries used\n- When you reach the end of generating all of the tests, return the characters 'EOF'"
}
